apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Name }}
  namespace: {{ .Namespace }}
  labels:
    app.kubernetes.io/name: multiclustertunnel
    app.kubernetes.io/component: agent
    app.kubernetes.io/part-of: multiclustertunnel-e2e
    app.kubernetes.io/instance: {{ .Name }}
    e2e-test: "true"
  annotations:
    description: "Deployment for MultiClusterTunnel agent component in e2e tests"
spec:
  replicas: {{ .Replicas | default 1 }}
  strategy:
    type: Recreate  # Ensure clean restart for single instance
  selector:
    matchLabels:
      app.kubernetes.io/name: multiclustertunnel
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: {{ .Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: multiclustertunnel
        app.kubernetes.io/component: agent
        app.kubernetes.io/part-of: multiclustertunnel-e2e
        app.kubernetes.io/instance: {{ .Name }}
        e2e-test: "true"
      annotations:
        description: "Pod template for MultiClusterTunnel agent in e2e tests"
    spec:
      serviceAccountName: {{ .Name }}
      terminationGracePeriodSeconds: 30  # Allow graceful connection cleanup
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532  # nonroot user
        fsGroup: 65532
      containers:
      - name: agent
        image: {{ .Image }}
        imagePullPolicy: {{ .ImagePullPolicy | default "IfNotPresent" }}
        command: ["/agent"]
        args:
        - --hub-address={{ .HubAddress }}
        - --cluster-name={{ .ClusterName }}
        - --uds-socket-path=/tmp/multiclustertunnel.sock
        - --hub-kubeconfig={{ .HubKubeConfig | default "/etc/hub-kubeconfig/config" }}
        {{- if .InsecureConnection }}
        - --insecure
        {{- end }}
        - --v={{ .LogLevel | default "2" }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CLUSTER_NAME
          value: {{ .ClusterName | quote }}
        - name: HUB_ADDRESS
          value: {{ .HubAddress | quote }}
        {{- if .ExtraEnvVars }}
        {{- range .ExtraEnvVars }}
        - name: {{ .Name }}
          value: {{ .Value | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{ .ResourceRequests.CPU | default "100m" }}
            memory: {{ .ResourceRequests.Memory | default "128Mi" }}
          limits:
            cpu: {{ .ResourceLimits.CPU | default "500m" }}
            memory: {{ .ResourceLimits.Memory | default "512Mi" }}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "test -S /tmp/multiclustertunnel.sock"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "test -S /tmp/multiclustertunnel.sock"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        {{- if not .InsecureConnection }}
        - name: client-certs
          mountPath: /etc/certs
          readOnly: true
        - name: ca-certs
          mountPath: /etc/ca-certs
          readOnly: true
        {{- end }}
        - name: hub-kubeconfig
          mountPath: /etc/hub-kubeconfig
          readOnly: true
        - name: socket-dir
          mountPath: /tmp
        {{- if .ExtraVolumeMounts }}
        {{- range .ExtraVolumeMounts }}
        - name: {{ .Name }}
          mountPath: {{ .MountPath }}
          readOnly: {{ .ReadOnly | default true }}
        {{- end }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # Need write access to /tmp for socket
          runAsNonRoot: true
          runAsUser: 65532
          capabilities:
            drop:
            - ALL
      volumes:
      {{- if not .InsecureConnection }}
      - name: client-certs
        secret:
          secretName: {{ .ClientCertSecret }}
          defaultMode: 0400
      - name: ca-certs
        secret:
          secretName: {{ .CACertSecret }}
          defaultMode: 0400
      {{- end }}
      - name: hub-kubeconfig
        secret:
          secretName: {{ .HubKubeConfigSecret | default "hub-kubeconfig" }}
          defaultMode: 0400
      - name: socket-dir
        emptyDir: {}
      {{- if .ExtraVolumes }}
      {{- range .ExtraVolumes }}
      - name: {{ .Name }}
        {{- if .Secret }}
        secret:
          secretName: {{ .Secret.SecretName }}
          defaultMode: {{ .Secret.DefaultMode | default 0400 }}
        {{- else if .ConfigMap }}
        configMap:
          name: {{ .ConfigMap.Name }}
          defaultMode: {{ .ConfigMap.DefaultMode | default 0644 }}
        {{- else if .EmptyDir }}
        emptyDir: {}
        {{- end }}
      {{- end }}
      {{- end }}
      nodeSelector:
        {{- if .NodeSelector }}
        {{- range $key, $value := .NodeSelector }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- else }}
        kubernetes.io/os: linux
        {{- end }}
      tolerations:
      {{- if .Tolerations }}
      {{- range .Tolerations }}
      - key: {{ .Key }}
        operator: {{ .Operator | default "Equal" }}
        value: {{ .Value | default "" }}
        effect: {{ .Effect }}
        {{- if .TolerationSeconds }}
        tolerationSeconds: {{ .TolerationSeconds }}
        {{- end }}
      {{- end }}
      {{- end }}
      affinity:
        {{- if .Affinity }}
        {{- if .Affinity.PodAntiAffinity }}
        podAntiAffinity:
          {{- if .Affinity.PodAntiAffinity.PreferredDuringSchedulingIgnoredDuringExecution }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- range .Affinity.PodAntiAffinity.PreferredDuringSchedulingIgnoredDuringExecution }}
          - weight: {{ .Weight }}
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- range $key, $value := .PodAffinityTerm.LabelSelector.MatchLabels }}
                  {{ $key }}: {{ $value }}
                  {{- end }}
              topologyKey: {{ .PodAffinityTerm.TopologyKey }}
          {{- end }}
          {{- end }}
        {{- end }}
        {{- end }}
